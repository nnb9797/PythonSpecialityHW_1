"""–ó–∞–¥–∞–Ω–∏–µ ‚Ññtask_6
    üìå –î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∫–ª–∞—Å—Å—ã –∏—Å–∫–ª—é—á–µ–Ω–∏—è —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∏ –≤—ã–¥–∞–ª–∏
       –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–∞—Ö.
    üìå –ü–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–¥–∞
       –ø—Ä–æ–µ–∫—Ç–∞."""
import json


class User:
    def __init__(self, name: str, user_id: str,  level: str = '0') -> None:
        self.name = name
        self.user_id = user_id
        self.level = level

    def __str__(self):
        return f'User: {self.name}, {self.user_id},  {self.level}'

    def __repr__(self):
        return f'User: {self.name}, {self.user_id},  {self.level}'

    def __hash__(self):                                     # –ø—Ä–∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏–∏ eq –Ω–∞–¥–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å hash
        return hash(self.name) + hash(self.user_id)

    def __eq__(self, other):                                                           # True/False –≤ –∑–∞–≤–∏—Å–∏–º–æ—Ç–∏ –æ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É—Å–ª–æ–≤–∏–π
        return self.name == other.name and self.user_id == other.user_id

class BaseExeption(Exception):
    pass

class LevelError(BaseExeption):
    def __init__(self, value, value_min):
        self.value = value
        self.value_min = value_min

    def __str__(self):
        return f"–û—à–∏–±–∫–∞ —É—Ä–æ–≤–Ω—è - {self.value} > –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è {self.value_min}"

class AccesErorr(BaseExeption):
     def __init__(self, value):
         self.value = value
     def __str__(self):
         return f"–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ - {self.value}"

class AccesErorr(BaseExeption):

    def __str__(self):
        return f"–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ "




def fun(num):
    if num < 2:
        raise AccesErorr
    elif num > 5:
        raise LevelError
    else:
        print('–≤—Å–µ –æ–∫')


if __name__ == '__main__':
    raise LevelError(4, 1)
    fun(1)
if __name__ == '__main__':

    work_group = set()

    def load_users(path: str = 'users2.json'):
        with open(path, 'r', encoding='UTF-8') as f:
            user_dict = json.load(f)
        for level, user_list in user_dict.items():
            for id, name in user_list.items():
                work_group.add(User(name, id, level))           # —Å–æ–∑–¥–∞–ª–∏ –æ–±—ä–µ–∫—Ç—ã User –∏ –∑–∞–ø–∏—Å–∞–ª–∏ –≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ


    load_users()
    print(work_group)